"""Added Global Settings Table

Revision ID: 5fc1a03ad0a7
Revises: fd2900da069a
Create Date: 2025-05-28 22:05:21.948382

"""

from typing import Sequence, Union
from datetime import datetime

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5fc1a03ad0a7"
down_revision: Union[str, None] = "fd2900da069a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "global_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "quicksight_dashboard_config",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column(
            "user_role_dashboard_mapping",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_global_settings_id"), "global_settings", ["id"], unique=False
    )

    # Insert initial record
    op.execute(
        """
        INSERT INTO global_settings (
            id, 
            quicksight_dashboard_config, 
            user_role_dashboard_mapping,
            created_at,
            updated_at
        ) VALUES (
            1,
            '[]',
            '[]',
            NOW(),
            NOW()
        )
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_global_settings_id"), table_name="global_settings")
    op.drop_table("global_settings")
    # ### end Alembic commands ###
